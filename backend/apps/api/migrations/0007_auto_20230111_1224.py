# Generated by Django 3.2.9 on 2023-01-11 12:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0006_remove_mineral_mineral_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="Heir",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "heir_type",
                    models.CharField(
                        choices=[("Previous", "Previous"), ("Potential", "Potential")],
                        max_length=20,
                        verbose_name="Heir Type",
                    ),
                ),
                (
                    "relationship",
                    models.CharField(
                        choices=[
                            ("Parent", "Parent"),
                            ("Grandparent", "Grandparent"),
                            ("Spouse", "Spouse"),
                            ("Sibling", "Sibling"),
                            ("Son", "Son"),
                            ("Grandson", "Grandson"),
                            ("Daughter", "Daughter"),
                            ("Granddaughter", "Granddaughter"),
                            ("Other", "Other"),
                        ],
                        max_length=64,
                        verbose_name="Relationship",
                    ),
                ),
                (
                    "relationship_custom",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Relationship Custom",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=30, verbose_name="First name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=30, verbose_name="Last name"),
                ),
                (
                    "deceased",
                    models.BooleanField(
                        blank=True, default=False, null=True, verbose_name="Deceased"
                    ),
                ),
                (
                    "died_year",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1900, 1900),
                            (1901, 1901),
                            (1902, 1902),
                            (1903, 1903),
                            (1904, 1904),
                            (1905, 1905),
                            (1906, 1906),
                            (1907, 1907),
                            (1908, 1908),
                            (1909, 1909),
                            (1910, 1910),
                            (1911, 1911),
                            (1912, 1912),
                            (1913, 1913),
                            (1914, 1914),
                            (1915, 1915),
                            (1916, 1916),
                            (1917, 1917),
                            (1918, 1918),
                            (1919, 1919),
                            (1920, 1920),
                            (1921, 1921),
                            (1922, 1922),
                            (1923, 1923),
                            (1924, 1924),
                            (1925, 1925),
                            (1926, 1926),
                            (1927, 1927),
                            (1928, 1928),
                            (1929, 1929),
                            (1930, 1930),
                            (1931, 1931),
                            (1932, 1932),
                            (1933, 1933),
                            (1934, 1934),
                            (1935, 1935),
                            (1936, 1936),
                            (1937, 1937),
                            (1938, 1938),
                            (1939, 1939),
                            (1940, 1940),
                            (1941, 1941),
                            (1942, 1942),
                            (1943, 1943),
                            (1944, 1944),
                            (1945, 1945),
                            (1946, 1946),
                            (1947, 1947),
                            (1948, 1948),
                            (1949, 1949),
                            (1950, 1950),
                            (1951, 1951),
                            (1952, 1952),
                            (1953, 1953),
                            (1954, 1954),
                            (1955, 1955),
                            (1956, 1956),
                            (1957, 1957),
                            (1958, 1958),
                            (1959, 1959),
                            (1960, 1960),
                            (1961, 1961),
                            (1962, 1962),
                            (1963, 1963),
                            (1964, 1964),
                            (1965, 1965),
                            (1966, 1966),
                            (1967, 1967),
                            (1968, 1968),
                            (1969, 1969),
                            (1970, 1970),
                            (1971, 1971),
                            (1972, 1972),
                            (1973, 1973),
                            (1974, 1974),
                            (1975, 1975),
                            (1976, 1976),
                            (1977, 1977),
                            (1978, 1978),
                            (1979, 1979),
                            (1980, 1980),
                            (1981, 1981),
                            (1982, 1982),
                            (1983, 1983),
                            (1984, 1984),
                            (1985, 1985),
                            (1986, 1986),
                            (1987, 1987),
                            (1988, 1988),
                            (1989, 1989),
                            (1990, 1990),
                            (1991, 1991),
                            (1992, 1992),
                            (1993, 1993),
                            (1994, 1994),
                            (1995, 1995),
                            (1996, 1996),
                            (1997, 1997),
                            (1998, 1998),
                            (1999, 1999),
                            (2000, 2000),
                            (2001, 2001),
                            (2002, 2002),
                            (2003, 2003),
                            (2004, 2004),
                            (2005, 2005),
                            (2006, 2006),
                            (2007, 2007),
                            (2008, 2008),
                            (2009, 2009),
                            (2010, 2010),
                            (2011, 2011),
                            (2012, 2012),
                            (2013, 2013),
                            (2014, 2014),
                            (2015, 2015),
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                        ],
                        null=True,
                    ),
                ),
                (
                    "estate_probated",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Estate probated",
                    ),
                ),
                (
                    "age",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Age",
                    ),
                ),
                (
                    "included_in_will",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Included in will",
                    ),
                ),
                (
                    "potential_street",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Potential Street Address",
                    ),
                ),
                (
                    "potential_zipcode",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Potential Zip Code",
                    ),
                ),
                (
                    "died_city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="heirs",
                        to="cities_light.city",
                    ),
                ),
                (
                    "died_country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="heirs",
                        to="cities_light.country",
                    ),
                ),
                (
                    "died_state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="heirs",
                        to="cities_light.region",
                    ),
                ),
                (
                    "potential_city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="heirs_of_potential",
                        to="cities_light.city",
                    ),
                ),
                (
                    "potential_state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="heirs_of_potential",
                        to="cities_light.region",
                    ),
                ),
                (
                    "probate_city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cities_light.city",
                    ),
                ),
                (
                    "probate_country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cities_light.country",
                    ),
                ),
                (
                    "probate_state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cities_light.region",
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="heirs",
                        to="api.property",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Inquiry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Buy / Grow Portfolio", "Buy / Grow Portfolio"),
                            ("Sell", "Sell"),
                            (
                                "Get Connected with Service",
                                "Get Connected with Service",
                            ),
                        ],
                        max_length=64,
                        verbose_name="Category",
                    ),
                ),
                ("initiated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("In Progress", "In Progress"),
                            ("Needs Attention", "Needs Attention"),
                            ("Complete", "Complete"),
                        ],
                        default="Pending",
                        max_length=64,
                        verbose_name="Status",
                    ),
                ),
                (
                    "looking_for",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Purchase", "Pending"),
                            ("Lease", "In Progress"),
                            ("Not Sure", "Complete"),
                        ],
                        max_length=64,
                        null=True,
                        verbose_name="Looking for",
                    ),
                ),
                ("comment", models.TextField()),
                (
                    "looking_country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="inquiries",
                        to="cities_light.country",
                    ),
                ),
                (
                    "looking_state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="inquiries",
                        to="cities_light.region",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MineralType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        choices=[
                            ("Oil & Gas", "Oil & Gas"),
                            ("Oil", "Oil"),
                            ("Gas", "Gas"),
                            ("Water", "Water"),
                            ("Carbon", "Carbon"),
                            ("Rare Earth", "Rare Earth"),
                            ("Other", "Other"),
                        ],
                        max_length=128,
                        verbose_name="Mineral Type",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.RemoveField(
            model_name="servicecompany",
            name="look_for_minerals",
        ),
        migrations.CreateModel(
            name="Will",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("description", models.TextField()),
                (
                    "location_of_will",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Location of will",
                    ),
                ),
                (
                    "location_of_will_contact_phone",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Location of will contact phone",
                    ),
                ),
                (
                    "heir",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wills",
                        to="api.heir",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "attachment",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.document",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="messages_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="messages_sent",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InquiryServiceCompany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "overall_experience_rate",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Overall experience rate",
                    ),
                ),
                (
                    "timeline_rate",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Timeline rate",
                    ),
                ),
                (
                    "completeness_of_project_rate",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Completeness of project rate",
                    ),
                ),
                ("rate_comment", models.TextField(verbose_name="Rate comment")),
                (
                    "inquiry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="api.inquiry"
                    ),
                ),
                (
                    "service_company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.servicecompany",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InquirySellMineral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "wish_percent_to_sell",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="% wishing to sell",
                    ),
                ),
                (
                    "inquiry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="api.inquiry"
                    ),
                ),
                (
                    "mineral",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="api.mineral"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="inquiry",
            name="minerals_of_interest",
            field=models.ManyToManyField(
                related_name="inquiries",
                to="api.MineralType",
                verbose_name="Minerals of interest",
            ),
        ),
        migrations.AddField(
            model_name="inquiry",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="inquiries",
                to="api.landowner",
            ),
        ),
        migrations.AddField(
            model_name="inquiry",
            name="properties",
            field=models.ManyToManyField(
                related_name="inquiries", to="api.Property", verbose_name="Properties"
            ),
        ),
        migrations.AddField(
            model_name="inquiry",
            name="services",
            field=models.ManyToManyField(
                related_name="inquiries",
                to="api.ServiceCompanyService",
                verbose_name="What kind of service do you need help with today",
            ),
        ),
        migrations.AddField(
            model_name="document",
            name="will",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="documents",
                to="api.will",
            ),
        ),
        migrations.AddField(
            model_name="mineral",
            name="mineral_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="api.mineraltype",
            ),
        ),
        migrations.AddField(
            model_name="servicecompany",
            name="look_for_minerals",
            field=models.ManyToManyField(
                related_name="service_companies",
                to="api.MineralType",
                verbose_name="Minerals you are looking for",
            ),
        ),
    ]
