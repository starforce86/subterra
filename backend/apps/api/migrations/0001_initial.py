# Generated by Django 3.2.9 on 2022-12-19 16:23

import apps.api.utils
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("users", "0002_auto_20221219_1623"),
        ("cities_light", "0011_alter_city_country_alter_city_region_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="LandOwner",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        primary_key=True,
                        related_name="owner",
                        serialize=False,
                        to="users.user",
                        verbose_name="User",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=30, verbose_name="First name"),
                ),
                (
                    "middle_name",
                    models.CharField(
                        blank=True, max_length=30, null=True, verbose_name="First name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(max_length=30, verbose_name="Last name"),
                ),
                (
                    "maiden_name",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Maiden name",
                    ),
                ),
                (
                    "aka",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="AKA"
                    ),
                ),
                (
                    "owner_category",
                    models.CharField(
                        choices=[
                            ("Trust", "Trust"),
                            ("LLC", "LLC"),
                            ("Legal Entity", "Legal Entity"),
                        ],
                        max_length=20,
                        verbose_name="Owner Category",
                    ),
                ),
                (
                    "physical_street",
                    models.CharField(
                        max_length=256, verbose_name="Physical Street Address"
                    ),
                ),
                (
                    "physical_zipcode",
                    models.CharField(max_length=256, verbose_name="Physical Zip Code"),
                ),
                (
                    "mailing_street",
                    models.CharField(
                        max_length=256, verbose_name="Mailing Street Address"
                    ),
                ),
                (
                    "mailing_zipcode",
                    models.CharField(max_length=256, verbose_name="Mailing Zip Code"),
                ),
                (
                    "preferred_contact_method",
                    models.CharField(
                        choices=[
                            ("Phone", "Phone"),
                            ("Text", "Text"),
                            ("Email", "Email"),
                            ("Mail", "Mail"),
                        ],
                        max_length=20,
                        verbose_name="Preferred Contact Method",
                    ),
                ),
                (
                    "cell_phone",
                    models.CharField(max_length=30, verbose_name="Cell Phone"),
                ),
                (
                    "secondary_phone",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Secondary Phone",
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(max_length=128, verbose_name="Contact Name"),
                ),
                (
                    "contact_phone",
                    models.CharField(max_length=30, verbose_name="Contact Phone"),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Contact Email",
                    ),
                ),
                (
                    "rights_for",
                    models.CharField(
                        choices=[
                            ("Self", "Self"),
                            ("Other", "Other"),
                            (
                                "Both self and family members",
                                "Both self and family members",
                            ),
                        ],
                        max_length=128,
                        verbose_name="Rights for",
                    ),
                ),
                (
                    "is_rights_inherit_in_a_will",
                    models.CharField(
                        choices=[
                            ("Yes", "Yes"),
                            ("No", "No"),
                            ("Not Sure", "Not Sure"),
                        ],
                        max_length=20,
                        verbose_name="Rights inherits in a will",
                    ),
                ),
                (
                    "is_rights_probated",
                    models.CharField(
                        choices=[
                            ("Yes", "Yes"),
                            ("No", "No"),
                            ("Not Sure", "Not Sure"),
                        ],
                        max_length=20,
                        verbose_name="Rights inherits in a will",
                    ),
                ),
                (
                    "has_attorney",
                    models.CharField(
                        choices=[
                            ("Yes", "Yes"),
                            ("No", "No"),
                            ("Not Sure", "Not Sure"),
                        ],
                        max_length=20,
                        verbose_name="Has attorney for estate",
                    ),
                ),
                (
                    "attorney_first_name",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Attorney First Name",
                    ),
                ),
                (
                    "attorney_last_name",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Attorney Last name",
                    ),
                ),
                (
                    "attorney_company_name",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Attorney Company Name",
                    ),
                ),
                (
                    "attorney_street",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Attorney Street Address",
                    ),
                ),
                (
                    "attorney_zipcode",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Attorney Zip Code",
                    ),
                ),
                (
                    "how_many_properties",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="How many properties do you own?",
                    ),
                ),
                (
                    "how_ownership",
                    models.CharField(
                        choices=[
                            ("Purchase", "Purchase"),
                            ("Inherited", "Inherited"),
                            ("Not Sure", "Not Sure"),
                        ],
                        max_length=20,
                        verbose_name="How did you come into ownership?",
                    ),
                ),
                (
                    "attorney_city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="attorney_owners",
                        to="cities_light.city",
                    ),
                ),
                (
                    "attorney_state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="attorney_owners",
                        to="cities_light.region",
                    ),
                ),
                (
                    "mailing_city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailing_owners",
                        to="cities_light.city",
                    ),
                ),
                (
                    "mailing_state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailing_owners",
                        to="cities_light.region",
                    ),
                ),
                (
                    "physical_city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="owners",
                        to="cities_light.city",
                    ),
                ),
                (
                    "physical_state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="owners",
                        to="cities_light.region",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Mineral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "mineral_type",
                    models.CharField(
                        choices=[
                            ("Oil & Gas", "Oil & Gas"),
                            ("Oil", "Oil"),
                            ("Gas", "Gas"),
                            ("Water", "Water"),
                            ("Carbon", "Carbon"),
                            ("Rare Earth", "Rare Earth"),
                            ("Other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Type of Mineral",
                    ),
                ),
                (
                    "mineral_type_custom",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Custom Mineral Type",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("Conveyance Copy", "Conveyance Copy"),
                            ("Division Order", "Division Order"),
                            ("Will", "Will"),
                            ("Probate", "Probate"),
                            ("AOH", "AOH"),
                            ("Lease Copy", "Lease Copy"),
                            (
                                "Check Stub / Royalty Payment",
                                "Check Stub / Royalty Payment",
                            ),
                        ],
                        max_length=64,
                        verbose_name="Document Type",
                    ),
                ),
                (
                    "percent_owned",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Deal value preference min",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceCompany",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        primary_key=True,
                        related_name="service_company",
                        serialize=False,
                        to="users.user",
                        verbose_name="User",
                    ),
                ),
                (
                    "company_name",
                    models.CharField(max_length=128, verbose_name="Company Name"),
                ),
                ("address", models.CharField(max_length=256, verbose_name="Address")),
                ("zipcode", models.CharField(max_length=256, verbose_name="Zip Code")),
                (
                    "look_for_properties",
                    models.CharField(
                        choices=[
                            ("producing", "Producing"),
                            ("non-producing", "Non-Producing"),
                            ("not_sure", "Not Sure"),
                        ],
                        max_length=20,
                        verbose_name="Looking for properties that are",
                    ),
                ),
                (
                    "look_for_minerals",
                    models.CharField(
                        choices=[
                            ("Oil & Gas", "Oil & Gas"),
                            ("Oil", "Oil"),
                            ("Gas", "Gas"),
                            ("Water", "Water"),
                            ("Carbon", "Carbon"),
                            ("Rare Earth", "Rare Earth"),
                            ("Other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Minerals you are looking for",
                    ),
                ),
                (
                    "look_for_minerals_custom",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Custom minerals you are looking for",
                    ),
                ),
                (
                    "interested_in",
                    models.CharField(
                        choices=[
                            ("Operated", "Operated"),
                            ("Non-Operated", "Non-Operated"),
                            ("not_sure", "Not Sure"),
                        ],
                        max_length=20,
                        verbose_name="Interested in",
                    ),
                ),
                (
                    "deal_value_preference_min",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Deal value preference min"
                    ),
                ),
                (
                    "deal_value_preference_max",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Deal value preference max"
                    ),
                ),
                ("website_url", models.URLField(blank=True, verbose_name="Zip Code")),
                (
                    "photo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=apps.api.utils.picture_upload_path,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceCompanyCertification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "certification",
                    models.CharField(
                        choices=[
                            ("Registered Landman", "Registered Landman"),
                            (
                                "Registered Petroleum Landman",
                                "Registered Petroleum Landman",
                            ),
                            (
                                "Certified Petroleum Landman",
                                "Certified Petroleum Landman",
                            ),
                            (
                                "Certified Professional Lease and Title Analyst",
                                "Certified Professional Lease and Title Analyst",
                            ),
                            ("Petroleum Land Management", "Petroleum Land Management"),
                            (
                                "Certified Public Accountant",
                                "Certified Public Accountant",
                            ),
                            (
                                "Certified Financial Planner",
                                "Certified Financial Planner",
                            ),
                            ("Juris Doctor", "Juris Doctor"),
                            ("Oil, Gas, and Mineral Law", "Oil, Gas, and Mineral Law"),
                            (
                                "Estate Planning and Probate Law",
                                "Estate Planning and Probate Law",
                            ),
                            (
                                "Registered Mineral Manager",
                                "Registered Mineral Manager",
                            ),
                            (
                                "Certified Minerals Manager",
                                "Certified Minerals Manager",
                            ),
                            (
                                "Certified Trust and Fiduciary Advisor",
                                "Certified Trust and Fiduciary Advisor",
                            ),
                            (
                                "Certificate in Trust Administration",
                                "Certificate in Trust Administration",
                            ),
                            ("Accredited Estate Planner", "Accredited Estate Planner"),
                            (
                                "Chartered Trust and Estate Planners",
                                "Chartered Trust and Estate Planners",
                            ),
                            ("Certified Estate Planner", "Certified Estate Planner"),
                            (
                                "Certified Division Order Analyst",
                                "Certified Division Order Analyst",
                            ),
                        ],
                        max_length=128,
                        verbose_name="Certification",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceCompanyService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "service",
                    models.CharField(
                        choices=[
                            ("Loan Against Assets", "Loan Against Assets"),
                            ("Estate Lawyer - Planning", "Estate Lawyer - Planning"),
                            ("Estate Lawyer - Probate", "Estate Lawyer - Probate"),
                            ("Oil & Gas Lawyer", "Oil & Gas Lawyer"),
                            ("Appraise Assets", "Appraise Assets"),
                            (
                                "Landman - Ownership Issues",
                                "Landman - Ownership Issues",
                            ),
                            (
                                "Landman - Lease Negotiation",
                                "Landman - Lease Negotiation",
                            ),
                            ("Landman - Courthouse Work", "Landman - Courthouse Work"),
                            (
                                "Landman - Escheatment Issues",
                                "Landman - Escheatment Issues",
                            ),
                            ("Division Order Assistance", "Division Order Assistance"),
                            ("Estate Management Firms", "Estate Management Firms"),
                            ("Auditing Revenue", "Auditing Revenue"),
                            ("CPA - Tax Help", "CPA - Tax Help"),
                            ("Sell Assets - Auction", "Sell Assets - Auction"),
                            ("Sell Assets - Broker", "Sell Assets - Broker"),
                        ],
                        max_length=128,
                        verbose_name="Owner Category",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceCompanySocialLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "social_link",
                    models.URLField(max_length=30, verbose_name="Social link"),
                ),
                (
                    "service_company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_links",
                        to="api.servicecompany",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceCompanyPreferredState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "service_company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferred_states",
                        to="api.servicecompany",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cities_light.region",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceCompanyPhone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("phone", models.CharField(max_length=30, verbose_name="Phone")),
                (
                    "service_company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phones",
                        to="api.servicecompany",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceCompanyContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=30, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=30, verbose_name="Last name"),
                ),
                (
                    "service_company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="api.servicecompany",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="servicecompany",
            name="certifications",
            field=models.ManyToManyField(
                related_name="service_companies",
                to="api.ServiceCompanyCertification",
                verbose_name="Certifications",
            ),
        ),
        migrations.AddField(
            model_name="servicecompany",
            name="city",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="cities_light.city"
            ),
        ),
        migrations.AddField(
            model_name="servicecompany",
            name="services",
            field=models.ManyToManyField(
                related_name="service_companies",
                to="api.ServiceCompanyService",
                verbose_name="Services offered",
            ),
        ),
        migrations.AddField(
            model_name="servicecompany",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="cities_light.region"
            ),
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("alias", models.CharField(max_length=256)),
                ("legal_description", models.TextField()),
                ("comments", models.TextField()),
                (
                    "property_address",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Property Address",
                    ),
                ),
                (
                    "property_zipcode",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Property Zip Code",
                    ),
                ),
                (
                    "county",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="properties",
                        to="cities_light.subregion",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="properties",
                        to="api.landowner",
                    ),
                ),
                (
                    "property_city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cities_light.city",
                    ),
                ),
                (
                    "property_state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cities_light.region",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="properties",
                        to="cities_light.region",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MineralDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "s3_url",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=apps.api.utils.document_upload_path,
                    ),
                ),
                ("file_size", models.IntegerField(blank=True, null=True)),
                ("upload_finished_at", models.DateTimeField(blank=True, null=True)),
                (
                    "mineral",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="api.mineral",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="mineral",
            name="property",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="minerals",
                to="api.property",
            ),
        ),
    ]
