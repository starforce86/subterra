version: '3.3'

volumes:
    postgres_data: {}



services:
  backend:
    build:
      context: ./backend
      args:
        build: prod
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - ./.env:/app/.env:ro
    command: /gunicorn.sh
    entrypoint: /entrypoint.sh
    restart: on-failure
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY

  postgres:
    image: postgres:14.5-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "8000:80"
    depends_on:
      - backend
    volumes:
      - ./backend/media/:/media/
      - ./backend/staticfiles/:/staticfiles/
      - ./nginx/prod.conf:/etc/nginx/nginx.conf:ro



  backups:
    image: prodrigestivill/postgres-backup-local
    restart: on-failure
    depends_on:
      - postgres
    volumes:
      - /tmp/backups/:/backups/



